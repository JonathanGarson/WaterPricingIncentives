data_path = get_data("rct1_watermeasure.dta")
data_path = get_data("input_primary/rct1_watermeasure.dta")
data_path
files = get_data("input_primary/*.dta")
?grepkl
?grepl
getwd()
files = grepl(pattern = "*.dta", x = ("data/input_primary/"))
files
files = grep(pattern = "*.dta", x = ("data/input_primary/"))
files
files = grep(pattern = "/*.dta", x = ("data/input_primary/"))
files
files <- list.files(path = "data/input_primary/", pattern = "\\.dta$", full.names = TRUE)
files
files <- list.files(path = "data/input_primary/", pattern = "\.dta$", full.names = TRUE)
files <- list.files(path = "data/input_primary/", pattern = "\\.dta$", full.names = TRUE)
?frwite
library(data.table)
?frwite
# This script convert the data of the authors in csv, a non-propietary format.
library(data.table)
library(haven)
files <- list.files(path = "data/input_primary/", pattern = "\\.dta$", full.names = TRUE)
for (file in files){
df <- read_dta(file)  # Read the .dta file
csv_file <- sub("\\.dta$", ".csv", file)  # Replace .dta with .csv
fwrite(df, file = csv_file, row.names = FALSE)  # Save as .csv
message(paste("Converted:", file, "âž¡", csv_file))
}
data_path = get_data("input_primary/rct1_watermeasure.csv")
data_path
rct1 = fread(get_data("input_primary/rct1_watermeasure.csv"))
View(rct1)
summary(rct1)
rct1 = rct1[!is.na(waterunit),]
rct1 = fread(get_data("input_primary/rct1_watermeasure.csv"))
rct1 = rct1[!is.na(waterunit),]
names(rct1)
# Average treatment effects
# waterlevel
reg_waterlevel = feols(waterlevel ~ treatment |Upazila, cluster = village_id ,data = rct1)
# Packages ----------------------------------------------------------------
library(fixest)
# Average treatment effects
# waterlevel
reg_waterlevel = feols(waterlevel ~ treatment |Upazila, cluster = village_id ,data = rct1)
# Average treatment effects
# waterlevel
reg_waterlevel = feols(waterlevel ~ treatment |Upazila, cluster = ~village_id ,data = rct1)
reg_waterlevel
reg_waterlevel = feols(dryfield ~ treatment |Upazila, cluster = ~village_id ,data = rct1)
reg_waterlevel
reg_waterlevel
reg_sample_wlevel <- model.frame(wlevel_model)
reg_sample_wlevel <- model.frame(reg_waterlevel)
reg_sample_wlevel
wlevel_control_mean <- mean(reg_sample_wlevel$waterlevel[reg_sample_wlevel$treatment == 0], na.rm = TRUE)
# Average treatment effects
# waterlevel
reg_waterlevel = feols(waterlevel ~ treatment |Upazila, cluster = ~village_id ,data = rct1)
reg_waterlevel
# dryfield
reg_dryfield = feols(dryfield ~ treatment |Upazila, cluster = ~village_id ,data = rct1)
# heterogeneity by volumetric pricing
rct1[, t_marg := treatment*anymarginal]
reg_het_vp = feols(waterlevel ~ treatmeent + anymarginal + t_marg | Upazila, cluster = ~village_id, data = rct1)
reg_het_vp = feols(waterlevel ~ treatment + anymarginal + t_marg | Upazila, cluster = ~village_id, data = rct1)
reg_het_vp
# heterogeneity by volumetric pricing
reg_het_vp = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1)
reg_het_vp
# heterogeneity by volumetric pricing
reg_het_water_vp = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1)
reg_het_dryfield_vp = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1)
reg_het_dryfield_vp
summary(rct1)
### 60 ----------------------------------------------------------------------
reg_60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1, data = rct1[dat <= 60])
### 60 ----------------------------------------------------------------------
reg_60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1, data = rct1[dat <= 60,])
### 60 ----------------------------------------------------------------------
rct1_60 = rct1[dat <= 60,]
rct1_60
reg_60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1, data = rct1_60)
reg_60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 60])
reg_60_waterlevel
### 60 ----------------------------------------------------------------------
reg_inf60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 60])
reg_sup60_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 60])
reg_sup60_waterlevel
reg_inf60_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 60])
reg_sup60_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 60])
reg_inf60_dryfield
reg_sup60_dryfield
reg_inf60_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 60]) # significant results
reg_inf60_dryfield
reg_sup60_dryfield
reg_inf60_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 60])
reg_sup60_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 60])
reg_inf60_waterlevel_baseline
reg_sup60_waterlevel_baseline
reg_inf60_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 60]) #significant results
reg_sup60_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 60])
reg_inf60_dryfield_baseline
reg_sup60_dryfield_baseline
reg_inf70_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 70]) #significant results
reg_sup70_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 70])
reg_inf70_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 70]) #significant results
reg_sup70_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 70])
reg_inf70_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 70]) # significant results
reg_sup70_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 70])
reg_inf70_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 70]) #significant results
reg_sup70_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 70])
reg_inf70_waterlevel
reg_sup70_waterlevel
reg_inf70_waterlevel_baseline
reg_sup70_waterlevel_baseline
reg_inf70_dryfield
reg_sup70_dryfield
reg_inf70_dryfield_baseline
reg_sup70_dryfield_baseline
reg_inf70_dryfield_baseline
reg_sup70_dryfield
reg_inf70_dryfield
### 80 ----------------------------------------------------------------------
reg_inf80_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 80])
reg_sup80_waterlevel = feols(waterlevel ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 80])
reg_inf80_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 80])
reg_sup80_waterlevel_baseline = feols(waterlevel ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 80])
reg_inf80_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat <= 80])
reg_sup80_dryfield = feols(dryfield ~ treatment*anymarginal | Upazila, cluster = ~village_id, data = rct1[dat > 80])
reg_inf80_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat <= 80])
reg_sup80_dryfield_baseline = feols(dryfield ~ treatment | Upazila, cluster = ~village_id, data = rct1[dat > 80])
reg_inf80_waterlevel
